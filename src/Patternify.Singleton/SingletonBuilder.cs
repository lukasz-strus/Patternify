using Patternify.Abstraction.Generators;

namespace Patternify.Singleton;

internal sealed class SingletonBuilder : MainBuilder
{
    protected override string BuildSource() => $$"""
        // <auto-generated/>
        {{Usings}}

        {{Namespace}}

        {{AccessModifier}} partial class {{ClassName}}
        {
            private static {{ClassName}} _instance = null;
            private static object obj = new object();
                                                                       
            private {{ClassName}}()
            {
            }
                                                                       
            {{AccessModifier}} static {{ClassName}} GetInstance()
            {
                lock (obj)
                {
                    if(_instance == null)
                    {
                        _instance = new {{ClassName}}();
                    }
                }
                                                                            
                return _instance;
            }
        }
        """;
}